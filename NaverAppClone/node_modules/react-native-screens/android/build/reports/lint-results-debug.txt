/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/Screen.kt:245: Warning: Using internal inset dimension resource status_bar_height is not supported [InternalInsetResource]
        val statusBarHeight = context.resources.getIdentifier("status_bar_height", "dimen", "android")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "InternalInsetResource":
   The internal inset dimension resources are not a supported way to retrieve
   the relevant insets for your application. The insets are dynamic values
   that can change while your app is visible, and your app's window may not
   intersect with the system UI. To get the relevant value for your app and
   listen to updates, use androidx.core.view.WindowInsetsCompat and related
   APIs.

/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/Screen.kt:245: Warning: Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. R.foo.bar) than by name (e.g. getIdentifier("bar", "foo", null)). [DiscouragedApi]
        val statusBarHeight = context.resources.getIdentifier("status_bar_height", "dimen", "android")
                                                ~~~~~~~~~~~~~

   Explanation for issues of type "DiscouragedApi":
   Discouraged APIs are allowed and are not deprecated, but they may be unfit
   for common use (e.g. due to slow performance or subtle behavior).

/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenWindowTraits.kt:109: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
                @TargetApi(Build.VERSION_CODES.LOLLIPOP)
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenStackFragment.kt:176: Warning: Prefer "SHOW_AS_ACTION_IF_ROOM" instead of "SHOW_AS_ACTION_ALWAYS" [AlwaysShowAction]
                setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS)
                                         ~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AlwaysShowAction":
   Using showAsAction="always" in menu XML, or MenuItem.SHOW_AS_ACTION_ALWAYS
   in Java code is usually a deviation from the user interface style guide.Use
   ifRoom or the corresponding MenuItem.SHOW_AS_ACTION_IF_ROOM instead.

   If always is used sparingly there are usually no problems and behavior is
   roughly equivalent to ifRoom but with preference over other ifRoom items.
   Using it more than twice in the same menu is a bad idea.

   This check looks for menu XML files that contain more than two always
   actions, or some always actions and no ifRoom actions. In Java code, it
   looks for projects that contain references to
   MenuItem.SHOW_AS_ACTION_ALWAYS and no references to
   MenuItem.SHOW_AS_ACTION_IF_ROOM.

/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/CustomSearchView.kt:8: Warning: Custom view CustomSearchView is missing constructor used by tools: (Context) or (Context,AttributeSet) or (Context,AttributeSet,int) [ViewConstructor]
class CustomSearchView(context: Context, fragment: Fragment) : SearchView(context) {
      ~~~~~~~~~~~~~~~~
/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/CustomToolbar.kt:7: Warning: Custom view CustomToolbar is missing constructor used by tools: (Context) or (Context,AttributeSet) or (Context,AttributeSet,int) [ViewConstructor]
open class CustomToolbar(context: Context, val config: ScreenStackHeaderConfig) : Toolbar(context)
           ~~~~~~~~~~~~~

   Explanation for issues of type "ViewConstructor":
   Some layout tools (such as the Android layout editor) need to find a
   constructor with one of the following signatures:
   * View(Context context)
   * View(Context context, AttributeSet attrs)
   * View(Context context, AttributeSet attrs, int defStyle)

   If your custom view needs to perform initialization which does not apply
   when used in a layout editor, you can surround the given code with a check
   to see if View#isInEditMode() is false, since that method will return false
   at runtime but true within a user interface editor.

0 errors, 6 warnings
