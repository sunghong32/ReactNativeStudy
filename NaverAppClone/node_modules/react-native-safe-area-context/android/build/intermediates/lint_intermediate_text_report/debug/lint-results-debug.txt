/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-safe-area-context/android/build.gradle:11: Warning: A newer version of com.android.tools.build:gradle than 7.3.1 is available: 8.10.1 [AndroidGradlePluginVersion]
        classpath("com.android.tools.build:gradle:7.3.1")
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-safe-area-context/android/build.gradle:119: Warning: Avoid using + in version numbers; can lead to unpredictable and unrepeatable builds (com.facebook.react:react-native:+) [GradleDynamicVersion]
    implementation 'com.facebook.react:react-native:+'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDynamicVersion":
   Using + in dependencies lets you automatically pick up the latest available
   version rather than a specific, named version. However, this is not
   recommended; your builds are not repeatable; you may have tested with a
   slightly different version than what the build server used. (Using a
   dynamic version as the major version number is more problematic than using
   it in the minor version position.)

/Users/minsunghong/ReactNativeStudy/NaverAppClone/node_modules/react-native-safe-area-context/android/build.gradle:66: Warning: Missing x86 and x86_64 ABI support for ChromeOS [ChromeOsAbiSupport]
            abiFilters (*reactNativeArchitectures())
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ChromeOsAbiSupport":
   To properly support ChromeOS, your Android application should have an x86
   and/or x86_64 binary as part of the build configuration. To fix the issue,
   ensure your files are properly optimized for ARM; the binary translator
   will then ensure compatibility with x86. Alternatively, add an abiSplit for
   x86 within your build.gradle file and create the required x86
   dependencies.

   https://developer.android.com/ndk/guides/abis

0 errors, 3 warnings
