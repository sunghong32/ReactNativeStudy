/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/AndroidManifest.xml:14: Warning: Redundant label can be removed [RedundantLabel]
        android:label="@string/app_name"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantLabel":
   When an activity does not have a label attribute, it will use the one from
   the application tag. Since the application has already specified the same
   label, the label on this activity can be omitted.

/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/res/drawable/rn_edit_text_material.xml:17: Warning: The resource @dimen/abc_edit_text_inset_horizontal_material is marked as private in androidx.appcompat:appcompat:1.6.1 [PrivateResource]
       android:insetLeft="@dimen/abc_edit_text_inset_horizontal_material"
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/res/drawable/rn_edit_text_material.xml:18: Warning: The resource @dimen/abc_edit_text_inset_horizontal_material is marked as private in androidx.appcompat:appcompat:1.6.1 [PrivateResource]
       android:insetRight="@dimen/abc_edit_text_inset_horizontal_material"
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/res/drawable/rn_edit_text_material.xml:19: Warning: The resource @dimen/abc_edit_text_inset_top_material is marked as private in androidx.appcompat:appcompat:1.6.1 [PrivateResource]
       android:insetTop="@dimen/abc_edit_text_inset_top_material"
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/res/drawable/rn_edit_text_material.xml:20: Warning: The resource @dimen/abc_edit_text_inset_bottom_material is marked as private in androidx.appcompat:appcompat:1.6.1 [PrivateResource]
       android:insetBottom="@dimen/abc_edit_text_inset_bottom_material">
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/res/drawable/rn_edit_text_material.xml:32: Warning: The resource @drawable/abc_textfield_default_mtrl_alpha is marked as private in androidx.appcompat:appcompat:1.6.1 [PrivateResource]
        <item android:state_enabled="false" android:drawable="@drawable/abc_textfield_default_mtrl_alpha"/>
                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/res/drawable/rn_edit_text_material.xml:33: Warning: The resource @drawable/abc_textfield_activated_mtrl_alpha is marked as private in androidx.appcompat:appcompat:1.6.1 [PrivateResource]
        <item android:drawable="@drawable/abc_textfield_activated_mtrl_alpha"/>
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "PrivateResource":
   Private resources should not be referenced; the may not be present
   everywhere, and even where they are they may disappear without notice.

   To fix this, copy the resource into your own project instead.

/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/src/main/AndroidManifest.xml:10: Warning: The attribute android:allowBackup is deprecated from Android 12 and higher and may be removed in future versions. Consider adding the attribute android:dataExtractionRules specifying an @xml resource which configures cloud backups and device transfers on Android 12 and higher. [DataExtractionRules]
      android:allowBackup="false"
                           ~~~~~

   Explanation for issues of type "DataExtractionRules":
   Before Android 12, the attributes android:allowBackup and
   android:fullBackupContent were used to configure all forms of backup,
   including cloud backups, device-to-device transfers and adb backup.

   In Android 12 and higher, these attributes have been deprecated and will
   only apply to cloud backups. You should instead use the attribute
   android:dataExtractionRules, specifying an @xml resource that configures
   which files to back up, for cloud backups and for device-to-device
   transfers, separately. If your minSdkVersion supports older versions,
   you'll still want to specify an android:fullBackupContent resource if the
   default behavior is not right for your app.

   https://developer.android.com/about/versions/12/backup-restore#xml-changes
   https://goo.gle/DataExtractionRules

/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/build.gradle: Warning: The resource R.integer.react_native_dev_server_port appears to be unused [UnusedResources]
/Users/minsunghong/ReactNativeStudy/NaverAppClone/android/app/build.gradle: Warning: The resource R.integer.react_native_inspector_proxy_port appears to be unused [UnusedResources]

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

0 errors, 10 warnings
